# README for Annotation Analysis Exercise

## Overview
This project focuses on analyzing a folder of annotation files. The annotation files follow a specific naming convention, which includes details such as date, time, satellite number, version, and a unique region identifier. The analysis script provides insights into the dataset, including the number of files, the frequency of annotations by month, and satellite-related statistics.

## File Structure
- `annotations/` - Folder containing the annotation files, organized by month.
- `annotation_analysis.py` - The main Python script used for the analysis.
- `session_5.ipynb` - Jupyter Notebook that contains an interactive version of the analysis.

## Annotation Naming Convention
The annotation files follow the naming convention:

```
{DATE}_{TIME}_SN{SATELLITE_NUMBER}_QUICKVIEW_VISUAL_{VERSION}_{UNIQUE_REGION}.txt
```

Where:
- **DATE**: YYYYMMDD format (e.g., 20241201)
- **TIME**: HHMMSS format (e.g., 213430)
- **SATELLITE_NUMBER**: Integer representing the satellite number
- **VERSION**: Version of the pipeline, e.g., "0_1_2"
- **UNIQUE_REGION**: Unique identifier for the region, e.g., "SATL-2KM-10N_552_4164"

## Analysis Steps
The script performs the following operations:

1. **Count the Total Files**: Counts the number of annotation files in the folder.
2. **Validate File Naming**: Identifies the number of files that follow the naming convention.
3. **Annotations per Month**: Calculates the number of annotation files per month and determines which month has the most annotations.
4. **Organize Annotations by Month**: Creates a new folder structure to organize the annotations by month.
5. **List Annotations by Date**: Prints all annotation files sorted from most recent to oldest.
6. **Satellite Analysis**: Identifies the number of different satellites, counts the annotations per satellite, and determines which satellite was used most recently.
7. **Unique Regions**: Calculates the number of unique regions in the dataset.

## Requirements
- Python 3.x
- Required Libraries: 
  - `os`
  - `re`
  - `numpy`
  - `collections`
  - `datetime`
  - `scipy`
  - `math`
  - `glob`
  - `shutil`

## How to Run
1. **Extract the Annotations**: Make sure the `annotations` folder is extracted and placed in the project directory.
2. **Run the Analysis Script**: Execute the script `annotation_analysis.py` using Python:
   ```
   python annotation_analysis.py
   ```
3. **Jupyter Notebook**: For an interactive analysis, open `session_5.ipynb` using Jupyter Notebook:
   ```
   jupyter notebook session_5.ipynb
   ```

## Results
- The script will print various statistics, such as the number of valid annotation files, annotations per month, and satellite-specific information.
- The annotations are also re-organized into month-specific folders for better management.

## Notes
- The absolute path is used in the script to ensure portability. Ensure that the script and the `annotations` folder are in the same directory.
- The script includes a validation step for file naming conventions. Only files matching the convention are included in further analysis.



