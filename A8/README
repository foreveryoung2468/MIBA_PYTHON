Session 8: Data Visualization with Matplotlib and Seaborn

Overview

This session focuses on data visualization using **Matplotlib** and **Seaborn**, two powerful Python libraries. The exercises emphasize a variety of plotting techniques, customization options, and practical use cases for analyzing and presenting data effectively.

Key Topics Covered

1. **Matplotlib and Seaborn Basics**
   - Introduction to Matplotlib and its flexible plotting options.
   - Overview of Seaborn's high-level interface for creating attractive and informative statistical graphics.

2. **Plotting Techniques**
   - Creating lineplots, histograms, ECDFs, and categorical plots like stripplots and swarmplots.
   - Leveraging Seaborn's aesthetics to enhance plot readability.

3. **Customization Options**
   - Adding titles, labels, and legends.
   - Adjusting colors, styles, and layouts.
   - Saving plots in various formats for sharing and reporting.

Exercises and Logical Approach

The exercises use a dataset of students to demonstrate practical visualization techniques.

Dataset Summary:
| **Student Name** | **Course**                 | **Grade** | **Gender** | **Study Time (hrs)** | **Age** |
|-------------------|----------------------------|-----------|------------|-----------------------|---------|
| Amelie            | Artificial Intelligence    | 85        | Female     | 15                    | 22      |
| Edgar             | Python for Data Science    | 92        | Male       | 20                    | 21      |
| Jordi             | Cloud Computing            | 78        | Male       | 10                    | 23      |
| ...               | ...                        | ...       | ...        | ...                   | ...     |


Exercise Details

1. **Lineplot: Study Time by Student Name**
   - **Objective**: Visualize how study time varies by student.
   - **Logic**: Plot `Student Name` on the x-axis and `Study Time` on the y-axis using a lineplot. Identify the student with the highest study time.

   Example Code:
   ```python
   sns.lineplot(data=df, x='Student Name', y='Study Time', marker='o')
   ```

2. **Histplot: Grade Distribution**
   - **Objective**: Display the frequency of grades and identify the grade range with the highest frequency.
   - **Logic**: Use `histplot` to plot grade distribution and overlay a KDE for better visualization.

   Example Code:
   ```python
   sns.histplot(data=df, x='Grade', bins=10, kde=True)
   ```

3. **ECDF Plot: Percentage of Students Scoring Less Than 85**
   - **Objective**: Show the cumulative distribution of grades and calculate the percentage of students scoring below 85.
   - **Logic**: Use `ecdfplot` for visualization and basic arithmetic for percentage calculation.

   Example Code:
   ```python
   sns.ecdfplot(data=df, x='Grade')
   ```

4. **Stripplot: Grade Distribution by Course**
   - **Objective**: Compare grade variability across courses.
   - **Logic**: Use `stripplot` with `Course` on the x-axis and `Grade` on the y-axis, adding jitter for visibility.

   Example Code:
   ```python
   sns.stripplot(data=df, x='Course', y='Grade', jitter=True)
   ```

5. **Swarmplot: Study Time by Gender**
   - **Objective**: Analyze the relationship between gender and study time.
   - **Logic**: Use `swarmplot` to show individual data points for `Gender` and `Study Time`.

   Example Code:
   ```python
   sns.swarmplot(data=df, x='Gender', y='Study Time')
   ```

6. **Pointplot: Average Grade by Course**
   - **Objective**: Identify which course has the highest average grade.
   - **Logic**: Use `pointplot` to summarize average grades for each course.

   Example Code:
   ```python
   sns.pointplot(data=df, x='Course', y='Grade', ci=None)
   ```
How to Run

Prerequisites
Ensure the following libraries are installed:
- Python 3.x
- Pandas
- Seaborn
- Matplotlib

Insights from the Exercises

1. **Lineplot**:
   - **Insight**: Edgar has the highest study time (20 hours).

2. **Histogram**:
   - **Insight**: Most students scored between 85 and 90.

3. **ECDF Plot**:
   - **Insight**: Approximately 43% of students scored less than 85.

4. **Stripplot**:
   - **Insight**: The course with the most spread in grades is `Cloud Computing`.

5. **Swarmplot**:
   - **Insight**: Male students have a slightly higher average study time than female students.

6. **Pointplot**:
   - **Insight**: `Computer Vision` has the highest average grade.
